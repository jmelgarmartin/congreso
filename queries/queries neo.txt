ACTUALIZAR NUMERO DE VECES QUE SE DICE UNA PALABRA

MATCH (:Diputado)-[r]->(p:Palabra)
WITH p.palabra as pal, count(r) as veces
MATCH (pala:Palabra)
WHERE pala.palabra = pal
SET pala.veces = veces

Aï¿½ADIR NUEVOS LABELS A UN NODO

MATCH (d:Diputado)
WITH d, d.grupo as group
CALL apoc.create.addLabels(d, [group]) YIELD node
RETURN count(d) as count


DISCURSO DE UN GRUPO

MATCH q=(d:Diputado)-[r:DICE]->(p:Palabra)
WHERE d.grupo = "Grupo Podemos"
RETURN q

PALABRAS MAS DICHAS POR UN GRUPO

MATCH q=(d:Diputado)-[r]->(p:Palabra)
WHERE d.grupo = "Grupo Podemos"
WITH p.palabra AS palabra, d.grupo AS grupo, COUNT(r) AS veces_dicho
RETURN palabra, grupo, veces_dicho
ORDER BY veces_dicho DESC
LIMIT 25

CON DIPUTADO

MATCH q=(d:Diputado)-[r]->(p:Palabra)
WHERE d.grupo = "Grupo Popular"
WITH p.palabra AS palabra, d.grupo AS grupo, d.apellidos AS diputado, COUNT(r) AS veces_dicho
RETURN palabra, grupo, diputado, veces_dicho
ORDER BY veces_dicho DESC
LIMIT 25

CYTOSCAPE

MATCH (d:Diputado)-[r]->(p:Palabra)
WHERE p.veces > 74
RETURN d, r, p
LIMIT 25


MATCH q=(a:`Grupo Socialista`)-[]->(p:Palabra)<-[]-(b:`Grupo Popular`)
where p.veces > 35
RETURN q
LIMIT 100


MATCH q=(a:`Grupo Vox`)-[r1]->(p:Palabra)<-[r2]-(b:`Grupo Popular`)
where p.veces > 20
and (r1.veces > 5 or
r2.veces > 5)
RETURN q
LIMIT 100

grafo con las 75 palabras mas dichas por cada Grupo

MATCH q=(d:Diputado)-[r]->(p:Palabra)
WHERE d.grupo = "Grupo Podemos"
WITH p.palabra AS palabra, d.grupo AS grupo, SUM(r.veces) AS veces_dicho, q
RETURN q
ORDER BY veces_dicho DESC
LIMIT 75
UNION ALL
MATCH q=(d:Diputado)-[r]->(p:Palabra)
WHERE d.grupo = "Grupo Popular"
WITH p.palabra AS palabra, d.grupo AS grupo, SUM(r.veces) AS veces_dicho, q
RETURN q
ORDER BY veces_dicho DESC
LIMIT 75
UNION ALL
MATCH q=(d:Diputado)-[r]->(p:Palabra)
WHERE d.grupo = "Grupo Ciudadanos"
WITH p.palabra AS palabra, d.grupo AS grupo, SUM(r.veces) AS veces_dicho, q
RETURN q
ORDER BY veces_dicho DESC
LIMIT 75
UNION ALL
MATCH q=(d:Diputado)-[r]->(p:Palabra)
WHERE d.grupo = "Grupo Mixto"
WITH p.palabra AS palabra, d.grupo AS grupo, SUM(r.veces) AS veces_dicho, q
RETURN q
ORDER BY veces_dicho DESC
LIMIT 75
UNION ALL
MATCH q=(d:Diputado)-[r]->(p:Palabra)
WHERE d.grupo = "Grupo Republicano"
WITH p.palabra AS palabra, d.grupo AS grupo, SUM(r.veces) AS veces_dicho, q
RETURN q
ORDER BY veces_dicho DESC
LIMIT 75
UNION ALL
MATCH q=(d:Diputado)-[r]->(p:Palabra)
WHERE d.grupo = "Grupo Socialista"
WITH p.palabra AS palabra, d.grupo AS grupo, SUM(r.veces) AS veces_dicho, q
RETURN q
ORDER BY veces_dicho DESC
LIMIT 75
UNION ALL
MATCH q=(d:Diputado)-[r]->(p:Palabra)
WHERE d.grupo = "Grupo Vasco"
WITH p.palabra AS palabra, d.grupo AS grupo, SUM(r.veces) AS veces_dicho, q
RETURN q
ORDER BY veces_dicho DESC
LIMIT 75
UNION ALL
MATCH q=(d:Diputado)-[r]->(p:Palabra)
WHERE d.grupo = "Grupo Vox"
WITH p.palabra AS palabra, d.grupo AS grupo, SUM(r.veces) AS veces_dicho, q
RETURN q
ORDER BY veces_dicho DESC
LIMIT 75
